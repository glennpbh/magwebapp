{
  "table": {
    "schema": "MAGINUS",
    "name": "PRODUCT_PRICE",
    "comment": "Product prices comprising a price list",
    "columns": [
      {
        "name": "PRICE_LIST",
        "position": 1,
        "data_type": "VARCHAR2",
        "length": 6,
        "nullable": false,
        "comment": "Unique identifier of a price list",
        "type_mappings": {
          "csharp": "string",
          "typescript": "string",
          "golang": "string",
          "python": "str"
        }
      },
      {
        "name": "PRODUCT_CODE",
        "position": 2,
        "data_type": "VARCHAR2",
        "length": 30,
        "nullable": false,
        "comment": "Uniquely identifies a product",
        "type_mappings": {
          "csharp": "string",
          "typescript": "string",
          "golang": "string",
          "python": "str"
        }
      },
      {
        "name": "UNIT_CODE",
        "position": 3,
        "data_type": "VARCHAR2",
        "length": 10,
        "nullable": false,
        "comment": "Uniquely identifies a unit (Pricing Unit)",
        "type_mappings": {
          "csharp": "string",
          "typescript": "string",
          "golang": "string",
          "python": "str"
        }
      },
      {
        "name": "QUANTITY_BREAK",
        "position": 4,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 15,
        "scale": 5,
        "nullable": false,
        "default_value": "0 ",
        "comment": "Prices apply upto and including this quantity.",
        "type_mappings": {
          "csharp": "decimal",
          "typescript": "number",
          "golang": "float64",
          "python": "float"
        }
      },
      {
        "name": "DISCOUNT_PERC1",
        "position": 5,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 5,
        "scale": 2,
        "nullable": true,
        "comment": "First discount/surcharge percentage",
        "type_mappings": {
          "csharp": "decimal?",
          "typescript": "number",
          "golang": "*float64",
          "python": "float"
        }
      },
      {
        "name": "PRICE_BASIS",
        "position": 6,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 1,
        "scale": 0,
        "nullable": false,
        "comment": "0=Net price, 1=standard price, 2=standard cost, 3=supplier_cost,4=manual,5=average cost, 6=VPA\n",
        "type_mappings": {
          "csharp": "int",
          "typescript": "number",
          "golang": "int",
          "python": "int"
        }
      },
      {
        "name": "NET_PRICE",
        "position": 7,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 15,
        "scale": 5,
        "nullable": true,
        "comment": "Price net of VAT (document currency)",
        "type_mappings": {
          "csharp": "decimal?",
          "typescript": "number",
          "golang": "*float64",
          "python": "float"
        }
      },
      {
        "name": "CHANGE_DATE",
        "position": 8,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 10,
        "scale": 0,
        "nullable": true,
        "comment": "Date record was last updated",
        "type_mappings": {
          "csharp": "int?",
          "typescript": "number",
          "golang": "*int",
          "python": "int"
        }
      },
      {
        "name": "CHANGE_USER",
        "position": 9,
        "data_type": "VARCHAR2",
        "length": 20,
        "nullable": true,
        "comment": "The user entering or last updating the record",
        "type_mappings": {
          "csharp": "string",
          "typescript": "string",
          "golang": "*string",
          "python": "str"
        }
      },
      {
        "name": "STUGAD",
        "position": 10,
        "data_type": "VARCHAR2",
        "length": 5,
        "nullable": true,
        "type_mappings": {
          "csharp": "string",
          "typescript": "string",
          "golang": "*string",
          "python": "str"
        }
      },
      {
        "name": "CODE_TYPE",
        "position": 11,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 1,
        "scale": 0,
        "nullable": true,
        "default_value": "1",
        "comment": "0=Product, 1=product group",
        "type_mappings": {
          "csharp": "int?",
          "typescript": "number",
          "golang": "*int",
          "python": "int"
        }
      },
      {
        "name": "CURRENCY_CODE",
        "position": 12,
        "data_type": "VARCHAR2",
        "length": 6,
        "nullable": true,
        "comment": "Currency code",
        "type_mappings": {
          "csharp": "string",
          "typescript": "string",
          "golang": "*string",
          "python": "str"
        }
      },
      {
        "name": "NEUTRAL_CURRENCY",
        "position": 13,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 1,
        "scale": 0,
        "nullable": true,
        "comment": "0=no warning 1=warn if price list and order currency differ",
        "type_mappings": {
          "csharp": "int?",
          "typescript": "number",
          "golang": "*int",
          "python": "int"
        }
      },
      {
        "name": "SUPPLIER_ACCOUNT",
        "position": 14,
        "data_type": "VARCHAR2",
        "length": 10,
        "nullable": true,
        "comment": "Uniquely identifies a supplier",
        "type_mappings": {
          "csharp": "string",
          "typescript": "string",
          "golang": "*string",
          "python": "str"
        }
      },
      {
        "name": "ANY_PRICE_UNIT",
        "position": 15,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 1,
        "scale": 0,
        "nullable": true,
        "comment": "0=product to be priced in price unit,1=price in any unit",
        "type_mappings": {
          "csharp": "int?",
          "typescript": "number",
          "golang": "*int",
          "python": "int"
        }
      },
      {
        "name": "COMBINATION_PRICING",
        "position": 16,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 1,
        "scale": 0,
        "nullable": true,
        "comment": "1=combination pricing applies 0=no combination pricing",
        "type_mappings": {
          "csharp": "int?",
          "typescript": "number",
          "golang": "*int",
          "python": "int"
        }
      },
      {
        "name": "COMBINATION_QUANTITY",
        "position": 17,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 1,
        "scale": 0,
        "nullable": true,
        "type_mappings": {
          "csharp": "int?",
          "typescript": "number",
          "golang": "*int",
          "python": "int"
        }
      },
      {
        "name": "MIN_MARGIN_PERCENT",
        "position": 18,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 5,
        "scale": 2,
        "nullable": true,
        "comment": "Minimum margin percentage",
        "type_mappings": {
          "csharp": "decimal?",
          "typescript": "number",
          "golang": "*float64",
          "python": "float"
        }
      },
      {
        "name": "COST_DISCOUNT",
        "position": 19,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 5,
        "scale": 2,
        "nullable": true,
        "comment": "Discount percentage. Zero if row created from product price agreement; where it will use the COST instead.",
        "type_mappings": {
          "csharp": "decimal?",
          "typescript": "number",
          "golang": "*float64",
          "python": "float"
        }
      },
      {
        "name": "COST",
        "position": 20,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 15,
        "scale": 5,
        "nullable": true,
        "comment": " Cost per document unit",
        "type_mappings": {
          "csharp": "decimal?",
          "typescript": "number",
          "golang": "*float64",
          "python": "float"
        }
      },
      {
        "name": "COST_CURRENCY",
        "position": 21,
        "data_type": "VARCHAR2",
        "length": 6,
        "nullable": true,
        "comment": "Supplier\u0012s currency in which the cost is entered. Only present if COST is non-zero.",
        "type_mappings": {
          "csharp": "string",
          "typescript": "string",
          "golang": "*string",
          "python": "str"
        }
      },
      {
        "name": "QUOTE_REFERENCE",
        "position": 22,
        "data_type": "VARCHAR2",
        "length": 30,
        "nullable": true,
        "comment": " Quote reference",
        "type_mappings": {
          "csharp": "string",
          "typescript": "string",
          "golang": "*string",
          "python": "str"
        }
      },
      {
        "name": "END_DATE",
        "position": 23,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 10,
        "scale": 0,
        "nullable": true,
        "comment": " End of range/time",
        "type_mappings": {
          "csharp": "int?",
          "typescript": "number",
          "golang": "*int",
          "python": "int"
        }
      },
      {
        "name": "TEXT_NUMBER",
        "position": 24,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 9,
        "scale": 0,
        "nullable": true,
        "comment": " Unique identifier of a text storage record.",
        "type_mappings": {
          "csharp": "int?",
          "typescript": "number",
          "golang": "*int",
          "python": "int"
        }
      },
      {
        "name": "BONUS_EARNED",
        "position": 25,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 10,
        "scale": 0,
        "nullable": true,
        "comment": "Number of bonus points that can be earned by buying this product from this price list in the pricing unit and quantity break specified.",
        "type_mappings": {
          "csharp": "int?",
          "typescript": "number",
          "golang": "*int",
          "python": "int"
        }
      },
      {
        "name": "BONUS_REDEEMED",
        "position": 26,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 10,
        "scale": 0,
        "nullable": true,
        "comment": "Number of bonus points required to obtain this product for free from this price list in the pricing unit and quantity break specified.",
        "type_mappings": {
          "csharp": "int?",
          "typescript": "number",
          "golang": "*int",
          "python": "int"
        }
      },
      {
        "name": "TRACKING_CODE",
        "position": 27,
        "data_type": "VARCHAR2",
        "length": 10,
        "nullable": true,
        "comment": "Used to store a catalogue page number for the purpose of analysing sales statistics",
        "type_mappings": {
          "csharp": "string",
          "typescript": "string",
          "golang": "*string",
          "python": "str"
        }
      },
      {
        "name": "EXEMPT",
        "position": 28,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 1,
        "scale": 0,
        "nullable": true,
        "default_value": "0",
        "comment": "1=exempt 0=not exempt",
        "type_mappings": {
          "csharp": "int?",
          "typescript": "number",
          "golang": "*int",
          "python": "int"
        }
      },
      {
        "name": "DISCOUNT_VALUE",
        "position": 29,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 15,
        "scale": 5,
        "nullable": true,
        "comment": "Discount or surcharge in value of the sum of component prices.",
        "type_mappings": {
          "csharp": "decimal?",
          "typescript": "number",
          "golang": "*float64",
          "python": "float"
        }
      },
      {
        "name": "START_DATE",
        "position": 30,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 10,
        "scale": 0,
        "nullable": true,
        "default_value": "0",
        "type_mappings": {
          "csharp": "int?",
          "typescript": "number",
          "golang": "*int",
          "python": "int"
        }
      },
      {
        "name": "EXPIRY_DATE",
        "position": 31,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 10,
        "scale": 0,
        "nullable": true,
        "default_value": "0",
        "type_mappings": {
          "csharp": "int?",
          "typescript": "number",
          "golang": "*int",
          "python": "int"
        }
      },
      {
        "name": "DISCOUNT_TYPE",
        "position": 32,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 1,
        "scale": 0,
        "nullable": true,
        "type_mappings": {
          "csharp": "int?",
          "typescript": "number",
          "golang": "*int",
          "python": "int"
        }
      },
      {
        "name": "MANUALLY_UPDATED",
        "position": 33,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 1,
        "scale": 0,
        "nullable": true,
        "type_mappings": {
          "csharp": "int?",
          "typescript": "number",
          "golang": "*int",
          "python": "int"
        }
      },
      {
        "name": "PREVIOUS_QUANTITY_BREAK",
        "position": 34,
        "data_type": "NUMBER",
        "length": 22,
        "precision": 15,
        "scale": 5,
        "nullable": true,
        "type_mappings": {
          "csharp": "decimal?",
          "typescript": "number",
          "golang": "*float64",
          "python": "float"
        }
      }
    ],
    "primary_keys": null,
    "foreign_keys": null,
    "indexes": [
      {
        "name": "I_PRODUCT_PRICE",
        "type": "NORMAL",
        "unique": true,
        "columns": [
          {
            "name": "PRICE_LIST",
            "position": 1,
            "order": "ASC"
          },
          {
            "name": "PRODUCT_CODE",
            "position": 2,
            "order": "ASC"
          },
          {
            "name": "QUANTITY_BREAK",
            "position": 3,
            "order": "ASC"
          },
          {
            "name": "UNIT_CODE",
            "position": 4,
            "order": "ASC"
          },
          {
            "name": "START_DATE",
            "position": 5,
            "order": "ASC"
          },
          {
            "name": "EXPIRY_DATE",
            "position": 6,
            "order": "ASC"
          }
        ],
        "table_name": "PRODUCT_PRICE",
        "schema_name": "MAGINUS"
      },
      {
        "name": "I_PRODUCT_PRICE_2",
        "type": "NORMAL",
        "unique": false,
        "columns": [
          {
            "name": "PRODUCT_CODE",
            "position": 1,
            "order": "ASC"
          }
        ],
        "table_name": "PRODUCT_PRICE",
        "schema_name": "MAGINUS"
      }
    ]
  },
  "metadata": {
    "requested_schemas": [
      "MAGINUS"
    ],
    "total_tables": 1,
    "total_columns": 34,
    "processing_time": 0,
    "statistics": {
      "foreign_keys": 0,
      "indexes": 2,
      "primary_keys": 0,
      "total_columns": 34,
      "total_schemas": 1,
      "total_tables": 1
    }
  },
  "generated": "2025-06-02T09:58:33.175546+01:00"
}
